#!/bin/sh
# This script will try to find "-d XXX" in parameters or "SYSLOGDISK=XXX" in /sys/realtek_boards/system_parameters.
# If XXX is found, /mnt/usbmounts/XXX will be probed.
# If probed and /mnt/usbmounts/XXX exists, the syslog that should reside in /var/log/messages will be directed to /mnt/usbmounts/XXX/log/messages.
# If the parameter "-p [PATH]" is given, the absolete path, [PATH], will be probed and,
# if possible, be used to save syslog.
# If it cannot be found for 50 second, this script will exit and do nothing.
# 'syslog -s' will stop all syslog servers, including syslogd and klogd.
 


while getopts d:p:s options
do
	case $options in
	d) LOGDIR=$OPTARG;;
	p) LOGPATH=$OPTARG;;
	s) echo "Syslog: Stop server"
		echo "Stop klogd..."; killall klogd
		echo "Stop syslogd..."; killall syslogd
		rm -rf /var/log; mkdir -p /var/log
		exit;;
	?) printf "Usage: %s [Options]\n\nOptions:  -d [usbdisk]\tSave log in /mnt/usbmounts/[usbdisk]. If \n\t[usbdisk]=AUTO, %s will try to find the first \n\tusbdisk that has \"syslog\" subdirectory inside to save log.\n" $0 $0
		exit;;
	esac
done

if [ "$LOGDIR" = "" ] && [ "$LOGPATH" = "" ]; then
	read KCMDLINE < /sys/realtek_boards/system_parameters
	for FIELD in $KCMDLINE;
	do
		FIELD2=`echo $FIELD |cut -d = -f 2`
		if [ `echo $FIELD | cut -d = -f 1` = "SYSLOGDISK" ] && [ "$FIELD2" != "" ]; then
			LOGDIR=$FIELD2
			break;
		fi
	done
fi

if [ "$LOGPATH" != "" ]; then
	let count=0

	while [ ! -d $LOGPATH ]; do
		let count=count+1
		if [ $count -gt 50 ]; then
			echo "Syslog: Cannot log. $LOGPATH doesn't exist."
			exit
		fi
		sleep 1
	done
elif [ "$LOGDIR" != "" ]; then
	let count=0

	if [ "$LOGDIR" = "AUTO" ]; then
		while [ 1 ]; do
			for Dir in `ls /mnt/usbmounts/`; do
				if [ -d /mnt/usbmounts/$Dir/syslog ]; then
					break
				fi
			done
			if [ -d /mnt/usbmounts/$Dir/syslog ]; then
				LOGDIR=$Dir
				break
			fi
			let count=count+1
			if [ $count -gt 50 ]; then
				echo "Syslog: AUTO mode cannot find a usb disk to log."
				exit
			fi
			sleep 1
		done
	else
		while [ ! -d /mnt/usbmounts/$LOGDIR ]; do
			let count=count+1
			if [ $count -gt 50 ]; then
				echo "Syslog: Cannot log. /mnt/usbmounts/$LOGDIR doesn't exist."
				exit
			fi
			sleep 1
		done
	fi
	cd /mnt/usbmounts/; mount -o remount,rw $LOGDIR
	LOGPATH=/mnt/usbmounts/$LOGDIR/syslog
else
	echo "Syslog: Syslog didn't start because we need to know where to save log."
	exit
fi

if [ ! -f $LOGPATH/messages ]; then
	rm -rf $LOGPATH
	if [ -d /var/log ]; then
		mv -f /var/log $LOGPATH
	else
		rm -rf /var/log
		mkdir -p $LOGPATH
	fi
else
	rm -rf /var/log
fi

ln -s $LOGPATH /var/log
syslogd -n -m 0&
klogd -n&
# No output chars to console, or else it will cause huge overhead
echo "1 4 1 7" > /proc/sys/kernel/printk
echo "Syslog: Log had been directed to $LOGPATH/messages"

